plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'eclipse'
    id 'jacoco'
}

group = 'ar.com.miura'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    /*
    implementation 'org.springframework.boot:spring-boot-starter-security'
    */

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    /*
    Logging dependencies
    */
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.slf4j:slf4j-api:1.7.30'

    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-spring-boot-1
    implementation 'org.springdoc:springdoc-openapi-spring-boot-1:3.1.5'

    /*
    Test implementation
    * */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
    reportsDir = file("$buildDir/jacoco")
}

tasks.named("bootJar") {
    mainClass = "ar.com.miura.usersapi.UsersApiApplication"
    /*archiveName = "${group}.${name}-${version}.jar"*/
    archiveName = "app.jar"

}

repositories {
    mavenCentral()
}
